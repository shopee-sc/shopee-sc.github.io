<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://shopee-sc.github.io/blog</id>
    <title>Shopee Supply Chain FE Blog</title>
    <updated>2019-12-01T06:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://shopee-sc.github.io/blog"/>
    <subtitle>The best place to stay up-to-date with the latest Shopee Supply Chain FE news and events.</subtitle>
    <logo>https://shopee-sc.github.io/img/favicon.ico</logo>
    <rights>Copyright © 2019 Shopee</rights>
    <entry>
        <title type="html"><![CDATA[在 React 组件中如何向 props.children 传递数据?]]></title>
        <id>https://shopee-sc.github.io/blog/2019/12/01/pass-data-to-children.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/12/01/pass-data-to-children.html"/>
        <updated>2019-12-01T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>在 <code>React</code> 组件中向 <code>props.children</code> 传递数据是设计 <code>ButtonGroup</code>/<code>CheckboxGroup</code> 等组件时常用的技巧，
我们都知道在 <code>React</code> 组件中向子组件传递数据很容易，但是如何向  <code>props.children</code> 传递数据呢？</p>
]]></summary>
        <author>
            <name>Victor Wang</name>
            <email/>
            <uri>https://github.com/beizhedenglong</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nodejs之RPC调研]]></title>
        <id>https://shopee-sc.github.io/blog/2019/11/22/rpc.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/11/22/rpc.html"/>
        <updated>2019-11-22T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>随着 Nodejs 的兴起，越来越多的 Web 服务中间层被搭建起来。如Node服务端渲染，BFF(Backend For Frontend))层，而RPC是远端过程调用，经常用于BFF层。最近，我打算写一个中间层，用Nodejs调用Go服务，除了可以简单用http调用之外，发现还有基于RPC的调用就研究了一下。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[npm命令使用技巧总结]]></title>
        <id>https://shopee-sc.github.io/blog/2019/11/19/npm.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/11/19/npm.html"/>
        <updated>2019-11-19T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>本文为翻译文章，原文链接：<a href="https://blog.usejournal.com/npm-tips-and-tricks-c96356fd1b12">https://blog.usejournal.com/npm-tips-and-tricks-c96356fd1b12</a>。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2019 TWeb 腾讯前端技术大会精彩回顾]]></title>
        <id>https://shopee-sc.github.io/blog/2019/11/17/tweb.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/11/17/tweb.html"/>
        <updated>2019-11-17T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>​
周六的时候去了 TWeb 腾讯前端技术大会, 总结一下. 接下来的文章会结合自己的理解介绍大会中的重点内容和相关技术落地的成果或进度. 为了更清晰地阐述一些技术点，会加上自己的理解.</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[http2/http3总结]]></title>
        <id>https://shopee-sc.github.io/blog/2019/11/15/http.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/11/15/http.html"/>
        <updated>2019-11-15T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>http2/http3总结</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[setTimeout实现原理和使用注意]]></title>
        <id>https://shopee-sc.github.io/blog/2019/11/10/setTimeout.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/11/10/setTimeout.html"/>
        <updated>2019-11-10T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>setTimeout，它就是一个定时器，用来指定某个函数在多少毫秒之后执行。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[async-await原理解析]]></title>
        <id>https://shopee-sc.github.io/blog/2019/11/06/async.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/11/06/async.html"/>
        <updated>2019-11-06T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>我们都知道，Promise解决了回调地狱的问题，但是如果遇到复杂的业务，代码里面会包含大量的 then 函数，使得代码依然不是太容易阅读。</p>
<p>基于这个原因，ES7 引入了 async/await，这是 JavaScript 异步编程的一个重大改进，提供了在不阻塞主线程的情况下使用同步代码实现异步访问资源的能力，并且使得代码逻辑更加清晰，而且还支持 try-catch 来捕获异常，非常符合人的线性思维。</p>
<p>所以，要研究一下如何实现 async/await。总的来说，async 是Generator函数的语法糖，并对Generator函数进行了改进。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 场景问题及解决方法总结]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/30/git.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/30/git.html"/>
        <updated>2019-10-30T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>总结了一些Git 场景问题及解决方法</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 使用技巧总结]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/25/css.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/25/css.html"/>
        <updated>2019-10-25T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>总结了一些CSS 使用技巧总结。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chorme 浏览器中的垃圾回收和内存泄漏]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/23/broswer-3.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/23/broswer-3.html"/>
        <updated>2019-10-23T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>总结了Chorme 浏览器中的垃圾回收和内存泄漏。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Webpack 性能优化总结大全]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/22/webpack.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/22/webpack.html"/>
        <updated>2019-10-22T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>总结了一些性能优化方法</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[深入了解强大的 ES6 「 ... 」 运算符]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/21/es6.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/21/es6.html"/>
        <updated>2019-10-21T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><em>本文系统的介绍了「...」 操作符的入门和进阶用法</em></p>
]]></summary>
        <author>
            <name>KK</name>
            <email/>
            <uri>https://github.com/beMySun</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[浏览器原理总结(二)]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/20/broswer.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/20/broswer.html"/>
        <updated>2019-10-20T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>总结了一些浏览器相关的原理，主要以问答的形式呈现。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[浏览器原理总结(一)]]></title>
        <id>https://shopee-sc.github.io/blog/2019/10/19/broswer-2.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/10/19/broswer-2.html"/>
        <updated>2019-10-19T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>总结了一些浏览器相关的原理，主要以问答的形式呈现。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Promise链式调用原理]]></title>
        <id>https://shopee-sc.github.io/blog/2019/09/04/promise.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/09/04/promise.html"/>
        <updated>2019-09-04T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Promise 必须为以下三种状态之一：等待态（Pending）、执行态（Fulfilled）和拒绝态（Rejected）。一旦Promise 被 resolve 或 reject，不能再迁移至其他任何状态（即状态 immutable）。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Webpack中的HMR原理]]></title>
        <id>https://shopee-sc.github.io/blog/2019/08/23/hmr.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/08/23/hmr.html"/>
        <updated>2019-08-23T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Hot Module Replacement（以下简称 HMR）是 webpack 发展至今引入的最令人兴奋的特性之一 ，当你对代码进行修改并保存后，webpack 将对代码重新打包，并将新的模块发送到浏览器端，浏览器通过新的模块替换老的模块，这样在不刷新浏览器的前提下就能够对应用进行更新。</p>
<p>基本实现原理大致这样的，构建 bundle 的时候，加入一段 HMR runtime 的 js 和一段和服务沟通的 js 。文件修改会触发 webpack 重新构建，服务器通过向浏览器发送更新消息，浏览器通过 jsonp 拉取更新的模块文件，jsonp 回调触发模块热替换逻辑。</p>
]]></summary>
        <author>
            <name>Winty zhou</name>
            <email/>
            <uri>https://github.com/LuckyWinty</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何理解 React 高阶组件(HOC)?]]></title>
        <id>https://shopee-sc.github.io/blog/2019/08/22/hoc.html</id>
        <link href="https://shopee-sc.github.io/blog/2019/08/22/hoc.html"/>
        <updated>2019-08-22T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><em>本篇文章适合想要了解 React 高阶组件(React High-Order Component) 而且对函数式编程不熟悉的同学阅读，不合适对高阶组件以及函数式编程很熟悉的同学阅读(写的有点啰嗦哈哈)。本篇文章的目的是让没有函数式编程经验的同学理解高阶组件，一瞥高阶组件的强大，希望大家可以把高阶组件用到自己的项目中去。</em></p>
]]></summary>
        <author>
            <name>Victor Wang</name>
            <email/>
            <uri>https://github.com/beizhedenglong</uri>
        </author>
    </entry>
</feed>