<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>Shopee Supply Chain FE Blog</title>
        <link>https://shopee-sc.github.io/blog</link>
        <description>The best place to stay up-to-date with the latest Shopee Supply Chain FE news and events.</description>
        <lastBuildDate>Thu, 01 Jan 1970 00:00:00 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>Shopee Supply Chain FE Blog</title>
            <url>https://shopee-sc.github.io/img/favicon.ico</url>
            <link>https://shopee-sc.github.io/blog</link>
        </image>
        <copyright>Copyright © 2019 Shopee</copyright>
        <item>
            <link>https://shopee-sc.github.io/blog/2019/20/21/es6.html</link>
            <guid>https://shopee-sc.github.io/blog/2019/20/21/es6.html</guid>
            <pubDate>Thu, 01 Jan 1970 00:00:00 GMT</pubDate>
            <description><![CDATA[<hr>
<p>title: 深入了解强大的 ES6 「 ... 」 运算符
author: KK
authorURL: <a href="https://github.com/beMySun">https://github.com/beMySun</a></p>
<hr>
<p><em>本文系统的介绍了「...」 操作符的入门和进阶用法</em></p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Promise链式调用原理]]></title>
            <link>https://shopee-sc.github.io/blog/2019/09/04/promise.html</link>
            <guid>https://shopee-sc.github.io/blog/2019/09/04/promise.html</guid>
            <pubDate>Wed, 04 Sep 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Promise 必须为以下三种状态之一：等待态（Pending）、执行态（Fulfilled）和拒绝态（Rejected）。一旦Promise 被 resolve 或 reject，不能再迁移至其他任何状态（即状态 immutable）。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Webpack中的HMR原理]]></title>
            <link>https://shopee-sc.github.io/blog/2019/08/23/hmr.html</link>
            <guid>https://shopee-sc.github.io/blog/2019/08/23/hmr.html</guid>
            <pubDate>Fri, 23 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Hot Module Replacement（以下简称 HMR）是 webpack 发展至今引入的最令人兴奋的特性之一 ，当你对代码进行修改并保存后，webpack 将对代码重新打包，并将新的模块发送到浏览器端，浏览器通过新的模块替换老的模块，这样在不刷新浏览器的前提下就能够对应用进行更新。</p>
<p>基本实现原理大致这样的，构建 bundle 的时候，加入一段 HMR runtime 的 js 和一段和服务沟通的 js 。文件修改会触发 webpack 重新构建，服务器通过向浏览器发送更新消息，浏览器通过 jsonp 拉取更新的模块文件，jsonp 回调触发模块热替换逻辑。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[如何理解 React 高阶组件(HOC)?]]></title>
            <link>https://shopee-sc.github.io/blog/2019/08/22/hoc.html</link>
            <guid>https://shopee-sc.github.io/blog/2019/08/22/hoc.html</guid>
            <pubDate>Thu, 22 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<p><em>本篇文章适合想要了解 React 高阶组件(React High-Order Component) 而且对函数式编程不熟悉的同学阅读，不合适对高阶组件以及函数式编程很熟悉的同学阅读(写的有点啰嗦哈哈)。本篇文章的目的是让没有函数式编程经验的同学理解高阶组件，一瞥高阶组件的强大，希望大家可以把高阶组件用到自己的项目中去。</em></p>
]]></description>
        </item>
    </channel>
</rss>